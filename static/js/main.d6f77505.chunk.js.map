{"version":3,"sources":["../../src/RekeepContext.ts","../../src/useRekeep.tsx","../../src/Provider.tsx","pages/Pages.styles.ts","pages/CreatePart.tsx","constants.ts","components/Part.tsx","pages/Home.tsx","components/Header.tsx","components/Header.styles.ts","App.tsx","index.tsx"],"names":["React","useRekeep","useContext","store","update","Provider","props","children","useState","state","setState","RekeepContext","value","key","newState","theme","container","padding","spacing","breakpoints","down","part","buttons","height","useStyles","makeStyles","styles","CreatePart","parts","classes","history","useHistory","id","name","status","handleChange","e","target","test","Container","maxWidth","className","Grid","direction","item","Typography","variant","color","alignItems","xs","lg","TextField","data-testid","fullWidth","placeholder","onChange","required","RadioGroup","FormControlLabel","control","Radio","label","Button","href","onClick","push","Object","entries","some","alert","newPart","Part","Card","Box","p","CardHeader","title","Divider","CardContent","Home","gutterBottom","length","map","idx","root","flexGrow","textDecoration","buttonText","Header","AppBar","position","Toolbar","to","createMuiTheme","responsiveFontSizes","ROUTES","CREATE","HOME","App","initialStore","ThemeProvider","CssBaseline","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6f77505.chunk.js","sourcesContent":["import React from 'react';\n\ntype DefaultContextType = {\n    store?: any;\n    update?: any;\n}\n\nconst defaultContext = {}\n\nexport default React.createContext<DefaultContextType>(defaultContext);\n","import { useContext } from 'react';\nimport ReKeepContext from './RekeepContext';\n\nfunction useRekeep() {\n  const { store, update } = useContext(ReKeepContext);\n\n  return {\n    store,\n    update\n  };\n}\n\nexport default useRekeep;\n","import React, { useState } from 'react';\nimport RekeepContext from './RekeepContext';\n\ntype StoreType = {}\n\nconst Provider: React.FC<{store: StoreType}> = (props) => {\n    const { store, children } = props;\n    const [ state, setState ] = useState<StoreType>(store);\n\n    const update = (key: string, value: any) => {\n        const newState = {...state, [key]: value };\n        setState(newState);\n    }\n\n    return(\n        <RekeepContext.Provider value={{ store: state, update}}>\n            {children}\n        </RekeepContext.Provider>\n    )\n}\n\nexport default Provider\n","import { Theme } from \"@material-ui/core\";\n\nexport default (theme: Theme) => ({\n    container: {\n        padding: theme.spacing(3, 6),\n        [theme.breakpoints.down('md')]:{\n            padding: theme.spacing(3, 3),\n        }\n    },\n    part: {\n        padding: theme.spacing(1, 0)\n    },\n    buttons: {\n       height: theme.spacing(7)\n    }\n})\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { Typography, Grid, TextField, Button, makeStyles, Radio, FormControlLabel, RadioGroup } from '@material-ui/core';\nimport { useRekeep } from 'rekeep';\nimport { PartType } from '../types';\nimport { useHistory } from 'react-router-dom';\nimport styles from './Pages.styles';\nimport * as CONSTANTS from '../constants';\n\nconst { PARTS } = CONSTANTS;\nconst useStyles = makeStyles(styles);\n\nconst CreatePart = () => {\n    const { store, update } = useRekeep();\n    const parts = store[PARTS];\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [state, setState] = useState<PartType>({\n        id: '',\n        name: '',\n        status: '',\n    });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const {id, value} = e.target;\n        // Accepts only numbers for id field\n        if(id === 'id' &&  !/^[0-9]+$/.test(value)){\n            return\n        }\n        setState({...state, [id]: value});\n    }\n\n    const handleClick = () => {\n        // Vaidate if all fields have value\n        if(Object.entries(state).some(([key, value]) => value === '' )){\n            alert('All fields are required');\n            return\n        };\n        const newPart = state;\n        update(PARTS, [...parts, newPart]);\n        history.push('/');\n    }\n\n    return <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid container direction=\"column\" spacing={3}>\n                <Grid item>\n                <Typography variant=\"h5\" color=\"secondary\">\n                    <strong>Create Part</strong>\n                </Typography>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item xs={12} lg={2}>\n                        <Typography variant=\"body1\">\n                            Part ID*\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} lg={10}>\n                        <TextField id=\"id\" data-testid=\"part-id\" variant=\"filled\" fullWidth placeholder=\"e.g. 1234\" value={state.id} onChange={handleChange} required/>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item  xs={12} lg={2}>\n                        <Typography variant=\"body1\">\n                            Part Name*\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} lg={10}>\n                        <TextField id=\"name\" data-testid=\"part-name\" variant=\"filled\" fullWidth placeholder=\"e.g. Allen Wrench\" onChange={handleChange}/>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item  xs={12} lg={2}>\n                        <Typography variant=\"body1\">\n                            Part Status*\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} lg={10}>\n                        <RadioGroup onChange={handleChange}>\n                            <FormControlLabel value=\"Checked In\" control={<Radio id=\"status\" />} label=\"Checked In\" />\n                            <FormControlLabel value=\"Checked Out\" control={<Radio id=\"status\" />} label=\"Checked Out\" />\n                        </RadioGroup>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12} lg={6}>\n                    <Grid item xs={12} lg={6}>\n                        <Button color=\"default\" variant=\"contained\" fullWidth href=\"#\" onClick={() => history.push('/')} className={classes.buttons}><Typography variant=\"button\">Cancel </Typography> </Button>\n                    </Grid>\n                    <Grid item xs={12} lg={6}>\n                        <Button color=\"primary\" variant=\"contained\" fullWidth onClick={handleClick} className={classes.buttons}><Typography variant=\"button\">Submit </Typography> </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n    </Container>\n}\n\nexport default CreatePart;\n","export const PARTS = \"PARTS\";\nexport const ROUTES = {\n  CREATE: \"/create\",\n  HOME: \"/\",\n};\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Typography, Divider } from \"@material-ui/core\";\nimport { PartType } from \"../types\";\n\nconst Part = ({ name, id, status }: PartType) => (\n  <Card>\n    <Box p={1}>\n      <CardHeader\n        title={\n          <Typography variant=\"h4\" color=\"secondary\">\n            <strong>{name}</strong>\n          </Typography>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <p>\n          {`🟢`}ID: {id}\n        </p>\n        <p>\n          {`🟣`}Status: <strong>{status}</strong>\n        </p>\n      </CardContent>\n    </Box>\n  </Card>\n);\n\nexport default Part;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Part from '../components/Part';\nimport { useRekeep } from 'rekeep';\nimport { PartType } from '../types';\nimport { makeStyles } from '@material-ui/core';\nimport styles from './Pages.styles';\nimport * as CONSTANTS from '../constants';\n\nconst { PARTS } = CONSTANTS;\nconst useStyles = makeStyles(styles);\n\nconst Home = () => {\n  const { store } = useRekeep();\n  const parts = store[PARTS];\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Typography variant=\"h5\" color=\"secondary\" gutterBottom>\n          <strong>List of all parts</strong>\n      </Typography>\n      {parts.length > 0 ? parts.map((part: PartType, idx: number) => (\n        <Grid className={classes.part}>\n          <Part key={idx} name={part.name} id={part.id} status={part.status}/>\n        </Grid>\n      )): (\n      <Typography variant=\"body1\"> {`🔴`}No Parts yet, click +CREATE on the top right side.</Typography>\n      )}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './Header.styles';\n\nconst useStyles = makeStyles(styles);\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <Typography variant=\"h2\">\n              {`🔨`}\n            </Typography>\n            <Typography variant=\"h5\" className={classes.title}>\n              {`Parts Store`}\n            </Typography>\n            <Link to=\"/\">\n              <Button><Typography className={classes.buttonText} variant=\"button\"><strong>HOME</strong></Typography></Button>\n            </Link>\n            <Link to=\"/create\">\n              <Button><Typography className={classes.buttonText} variant=\"button\"><strong>+ CREATE</strong></Typography></Button>\n            </Link>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  )\n};\n\nexport default Header;\n","import { Theme } from '@material-ui/core/styles';\n\nexport default (theme: Theme) => ({\n    root: {\n      flexGrow: 1,\n      '& a:-webkit-any-link': {\n        textDecoration: 'none'\n      }\n    },\n    title: {\n      flexGrow: 1,\n    },\n    buttonText: {\n      color: 'white',\n    },\n  })","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CreatePart from './pages/CreatePart';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport { Provider } from 'rekeep';\nimport { IStore } from './types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as CONSTANTS from './constants';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\nconst { ROUTES, PARTS } = CONSTANTS;\n\nfunction App() {\n  const initialStore: IStore = {\n    [PARTS]: [],\n  }\n  return (\n    <Provider store={initialStore}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div>\n              <Route exact path={ROUTES.HOME} component={Home} />\n              <Route path={ROUTES.CREATE} component={CreatePart} />\n            </div>\n          </div>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
{"version":3,"sources":["../../src/RekeepContext.ts","../../src/useRekeep.tsx","../../src/Provider.tsx","pages/CreatePart.tsx","components/Part.tsx","pages/Home.tsx","components/Header.tsx","components/Header.styles.ts","App.tsx","index.tsx"],"names":["React","useRekeep","useContext","store","update","Provider","props","children","useState","state","setState","RekeepContext","value","key","newState","CreatePart","history","useHistory","parts","id","name","status","handleChange","e","target","Container","maxWidth","Box","mt","px","Grid","container","direction","spacing","item","Typography","variant","color","alignItems","xs","TextField","fullWidth","placeholder","onChange","Button","onClick","newPart","push","Part","Card","p","CardHeader","title","Divider","CardContent","Home","map","part","useStyles","makeStyles","theme","root","flexGrow","Header","classes","className","AppBar","position","Toolbar","to","App","CssBaseline","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a770560.chunk.js","sourcesContent":["import React from 'react';\n\ntype DefaultContextType = {\n    store?: any;\n    update?: any;\n}\n\nconst defaultContext = {}\n\nexport default React.createContext<DefaultContextType>(defaultContext);\n","import { useContext } from 'react';\nimport ReKeepContext from './RekeepContext';\n\nfunction useRekeep() {\n  const { store, update } = useContext(ReKeepContext);\n\n  return {\n    store,\n    update\n  };\n}\n\nexport default useRekeep;\n","import React, { useState } from 'react';\nimport RekeepContext from './RekeepContext';\n\ntype StoreType = {}\n\nconst Provider: React.FC<{store: StoreType}> = (props) => {\n    const { store, children } = props;\n    const [ state, setState ] = useState<StoreType>(store);\n\n    const update = (key: string, value: any) => {\n        const newState = {...state, [key]: value };\n        setState(newState);\n    }\n\n    return(\n        <RekeepContext.Provider value={{ store: state, update}}>\n            {children}\n        </RekeepContext.Provider>\n    )\n}\n\nexport default Provider\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Typography, Grid, TextField, Button } from '@material-ui/core';\nimport { useRekeep } from 'rekeep';\nimport { PartType } from '../types';\nimport { useHistory } from 'react-router-dom';\n\nconst CreatePart = () => {\n    const { store, update } = useRekeep();\n    const history = useHistory();\n    const { parts } = store;\n\n    const [state, setState] = useState<PartType>({\n        id: '',\n        name: '',\n        status: '',\n    });\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const {id, value} = e.target;\n        if (value !== ''){\n            setState({...state, [id]: value});\n        }\n    }\n\n    const handleClick = () => {\n        const newPart = state;\n        update('parts', [...parts, newPart]);\n        history.push('/');\n    }\n\n    return <Container maxWidth=\"lg\">\n        <Box mt={3} px={3}>\n            <Grid container direction=\"column\" spacing={3}>\n                <Grid item>\n                <Typography variant=\"h5\" color=\"secondary\">\n                    <strong>Create Part</strong>\n                </Typography>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item xs={2}>\n                        <Typography variant=\"body1\">\n                            Part ID\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField id=\"id\" variant=\"filled\" fullWidth placeholder=\"e.g. Allen Wrench\" value={state.id} onChange={handleChange}/>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item xs={2}>\n                        <Typography variant=\"body1\">\n                            Part Name\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField id=\"name\" variant=\"filled\" fullWidth placeholder=\"e.g. Allen Wrench\" onChange={handleChange}/>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item xs={2}>\n                        <Typography variant=\"body1\">\n                            Part Status\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={10}>\n                        <TextField id=\"status\" variant=\"filled\" fullWidth placeholder=\"e.g. Allen Wrench\" onChange={handleChange}/>\n                    </Grid>\n                </Grid>\n                <Grid item container direction=\"row\" spacing={2} alignItems=\"center\" xs={12}>\n                    <Grid item xs={2}>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button color=\"default\" variant=\"contained\" fullWidth><Typography variant=\"button\">Cancel </Typography> </Button>\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Button color=\"primary\" variant=\"contained\" fullWidth onClick={handleClick}><Typography variant=\"button\">Submit </Typography> </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Box>\n    </Container>\n}\n\nexport default CreatePart;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Typography, Divider } from '@material-ui/core';\nimport { PartType } from '../types';\n\nconst Part = ({\n  name,\n  id,\n  status,\n}: PartType) => (\n  <Card>\n    <Box p={1}>\n      <CardHeader\n        title={<Typography variant=\"h4\" color=\"secondary\"><strong>{name}</strong></Typography>}\n      />\n      <Divider/>\n      <CardContent>\n        <p>ID: {id}</p>\n        <p>Status: {status}</p>\n      </CardContent>\n    </Box>\n  </Card>\n\n  \n);\n\nexport default Part;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Part from '../components/Part';\nimport { useRekeep } from 'rekeep';\nimport { PartType } from '../types';\n\nconst Home = () => {\n  const { store } = useRekeep();\n  const {parts} = store;\n  return (\n    <Container maxWidth=\"lg\">\n      <Box mt={3} px={3}>\n      <Typography variant=\"h5\" color=\"secondary\">\n          <strong>List of all parts</strong>\n      </Typography>\n      \n        {parts.map((part: PartType) => (\n          <Part name={part.name} id={part.id} status={part.status} />\n        ))}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './Header.styles';\n\nconst useStyles = makeStyles(styles);\n\nconst Header: React.FC<any> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Container maxWidth=\"lg\">\n          <Toolbar>\n            <Typography variant=\"h2\">\n              {`🔨`}\n            </Typography>\n            <Typography variant=\"h4\" className={classes.title}>\n              {`Parts Store`}\n            </Typography>\n            <Link to=\"/\">\n              <Button> HOME</Button>\n            </Link>\n            <Link to=\"/create\">\n              <Button> CREATE</Button>\n            </Link>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </div>\n  )\n};\n\nexport default Header;\n","import { Theme } from '@material-ui/core/styles';\n\nexport default (theme: Theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport CreatePart from './pages/CreatePart';\nimport Home from './pages/Home';\nimport Header from './components/Header';\nimport { Provider } from 'rekeep';\nimport { PartType } from './types';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\ninterface IStore {\n  parts: PartType[]\n}\n\nfunction App() {\n  const initialStore: IStore ={\n    parts: [],\n  }\n  return (\n    <Provider store={initialStore}>\n      <CssBaseline/>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/create\" component={CreatePart} />\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}